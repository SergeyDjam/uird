#!/bin/bash
#DATAMNT=/memory/data
#MOUNTDIR=/memory/layer-base
. /livekitlib 2>/dev/null || . $(dirname  $(which uird.scan))/livekitlib 2>/dev/null
LOSETUP=""
devs=$(grep /dev/sd /proc/mounts |egrep "${DATAMNT}/from|$MOUNTDIR" |cut -d " " -f 1 |sort |uniq -d )
mkdir  /remount_bins
mkdir -p  /etc/udev/rules.d
for dev in $devs ; do
		UUID=$(blkid |grep $dev |cut -d " " -f 3 |cut -d "\"" -f2)
		SERIAL_ID=$(udevadm info -n $dev |grep ID_SERIAL= |cut -d "=" -f 2)
		MNTOPTS=$(grep $dev /proc/mounts |head -n1 |cut -d " " -f 4)
		RBIND=$(grep $dev  /proc/self/mountinfo  |awk '{print $4 "," $5}'  |grep -v ^/,)
		for mountstr in $RBIND ; do 
			unmnt=$(echo $mountstr |cut -d "," -f2)
			$BIN_LOSETUP -d $($BIN_LOSETUP |grep $unmnt |cut -d " " -f 1) 2>/dev/null && LOSETUP=$unmnt 
			umount  $unmnt 2>/dev/null || echolog  "can't unmount $unmnt"
		done   
		MPOINT=$(grep $dev  /proc/self/mountinfo  |grep ".* / .*$dev" |cut -d " " -f 5)
		umount $dev 2>/dev/null 
		if [ $? -eq 0 ] ; then
			echo "#!/bin/bash" > /remount_bins/$UUID 
			echo "PATH=/usr/lib/magos/scripts:/bin:/sbin:/usr/bin" >>  /remount_bins/$UUID
			echo "mkdir -p $MPOINT" >>  /remount_bins/$UUID
			echo "mount  -o $MNTOPTS  --uuid $UUID  $MPOINT" >>  /remount_bins/$UUID
			for mountstr in $RBIND ; do 
				mpoint=$(echo $mountstr |cut -d "," -f2)
				echo "mkdir -p $mpoint" >>  /remount_bins/$UUID
				echo "mount --rbind $MPOINT$(echo $mountstr |cut -d "," -f1) " $mpoint >>  /remount_bins/$UUID
				[ "$LOSETUP" == "$mpoint" ] && echo 'losetup $(losetup -f)  '"$mpoint/.lock"  >>  /remount_bins/$UUID
			done 
			echo mdialog --msgbox \"'$1'\" >> /remount_bins/$UUID 
			echo ''  >>  /remount_bins/$UUID
			chmod +x /remount_bins/$UUID
			echo "KERNEL==\"sd*\",  ENV{ID_SERIAL}==\"${SERIAL_ID}\",  ACTION==\"add\", RUN+=\"${1}/remount_bins/$UUID %k \"" > /etc/udev/rules.d/00-${UUID}.rules
		fi
done
for device in $(echo $devs |while read a ; do echo $a |cut -c 1-8 ; done | sort |uniq ) ; do
		cat /proc/mounts |grep -q $device  && notfree="$notfree $device"
done

if [ "$notfree" ] ; then
	echo -e "Media:"  $red"$notfree"$default "is not free!!!"
	echo -ne $yellow"(S)hutdown, (R)eboot, (C)ontinue, Shell (default)"$default 
	read ASK
        case "$ASK" in
            "S" | "s" )
                #shutdown
                poweroff -f
            ;;
            "R" | "r" )
                #reboot
                reboot -f
             ;;
            "C" | "c" )
                #continue
            ;;
            * )
                #else - SHELL
                shell_cmd "shell"
            ;;
        esac
else
    cp -r /remount_bins ${1}/
	cp /etc/udev/rules.d/00*  ${2}/etc/udev/rules.d/
	echo -ne $blue"  * "$default
    echo "adding  udev rules for remount sources"
fi


